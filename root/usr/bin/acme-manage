#!/bin/sh

case $1 in
	client)
		consul lock nginx/acme $0 do_client
	;;
#consul lock doesn't seem to work with a shell function, so it must be independently called
	do_client)
		echo $$ > /var/run/acme.pid
		if acme-client -enNOs -v -c /acme/keys/ -f /acme/keys/accnt.pem -k /acme/keys/key.pem -C /acme/challenge $(consul kv get acme/domains); then
			printf $(date +%s) > /acme/keys/configured
		fi
		sleep 13h &
		wait
		rm /var/run/acme.pid
	;;
	init)
		consul lock acme/init $0 do_init
#consul lock doesn't seem to work with a shell function, so it must be independently called
	;;
	do_init)
		CONSUL_NAMES=$( consul kv get acme/domains 2>/dev/null )
		NEW_NAMES=$( echo ${CONSUL_NAMES} ${DOMAIN_NAMES} | awk '{line=""; for (i=1; i<=NF; i++) {if (line !~ $i) { line=line $i " "}}; print line}' )
		if [ "${CONSUL_NAMES}" != "${NEW_NAMES}" ]; then
			consul kv put acme/domains "${NEW_NAMES}"
		fi
		if [ ! -d "/acme/challenge" ]; then
			install -o nginx -g nginx -m 755 -d /acme/challenge
		fi
		if [ ! -d "/acme/keys" ]; then
			install -o root -g root -m 700 -d /acme/keys
		fi
		if [ ! -e "/acme/keys/dhparams.pem" ]; then
			openssl dhparam -out /acme/keys/dhparams.pem 2048
		fi
		if [ ! -e "/acme/keys/configured" ]; then
			printf 0 > /acme/keys/configured
		fi
	;;
	watch)
		consul watch -type=key -key=acme/domains $0 kill_client
	;;
#I don't expect watch to be any better then lock, so it's independently called
	kill_client)
		if [ -e "/var/run/acme.pid" ]; then
			kill $( cat /var/run/acme.pid )
		fi
	;;
	challange)
		inotifyd "$0 do_challange" /acme/challange:nd 
	;;
	do_challange)
		rm /var/www/acme/*
		cp acme/challange/* /var/www/acme/
	;;
	*)
		echo "commands: init, client, watch"
	;;

esac

