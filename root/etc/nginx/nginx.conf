user nginx;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	# Redirect http to https
	#
	#server {
	#	listen 80 default_server;
	#	server_name _;
	#	return 301 https://$host$request_uri;
	#}

	server {
		#  Comment-out when enabling SSL
		listen	80 default_server;
		#  Uncomment to enable SSL
		#listen	443 ssl;
		#ssl_certificate /etc/nginx/ssl/website.crt;
		#ssl_certificate_key /etc/nginx/ssl/website.key;
		#ssl_session_cache shared:SSL:10m;
		#ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

		#  This protects against certain attacks against Diffie-Hellman
		#  Key-Exchange, but you'll have to generate dhparams.pem first
		#  ( see: https://weakdh.org/sysadmin.html )
		#ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:!CAMELLIA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
		#ssl_prefer_server_ciphers on;
		#ssl_dhparam /etc/nginx/ssl/dhparams.pem;

		#  When useing SSL, "Staple" the revocation list the query. 
		#  It's better for us, the user, and the CA. Better for everyone
		#  ( see: https://en.wikipedia.org/wiki/OCSP_stapling )	 
		#ssl_stapling on;
		#ssl_stapling_verify on;

		#  When useing SSL, tell the browser we ONLY want to be access
		#  via ssl. 
		#  ( see: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security )
		#add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

		#Block XSS attacks
		add_header X-Frame-Options "DENY";
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Content-Type-Options "nosniff";
		add_header Content-Security-Policy "default-src 'self'; img-src 'self'; script-src 'self'; font-src 'self'; style-src 'self'; child-src 'self';

		keepalive_timeout 80s;
		server_name localhost;
		charset     utf-8;
		client_max_body_size 75M;
		root /var/www/app/static;

		location / {
			try_files $uri @uwsgi;
		}

		#location @uwsgi {
		#	include uwsgi_params;
		#	uwsgi_pass $UWSGI_SERVER:$UWSGI_PORT;
		#}
	}

}

daemon off;
